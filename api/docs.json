{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is API specification for Essential Workware project.",
    "title": "Essential Workware API",
    "contact": {},
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/cards": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Card",
        "parameters": [
          {
            "description": "Card request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createCard"
      }
    },
    "/cards/{card_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Card",
        "parameters": [
          {
            "type": "string",
            "description": "card ID",
            "name": "card_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getCard"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Card",
        "parameters": [
          {
            "type": "string",
            "description": "card ID",
            "name": "card_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteCard"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Card",
        "parameters": [
          {
            "type": "string",
            "description": "card ID",
            "name": "card_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Card request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CardResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchCard"
      }
    },
    "/cards/{card_id}/background-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Background signed url",
        "parameters": [
          {
            "type": "string",
            "description": "card ID",
            "name": "card_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createCardBackgroundSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Card",
        "parameters": [
          {
            "type": "string",
            "description": "card ID",
            "name": "card_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteCardBackgroundSignedUrl"
      }
    },
    "/chats": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of Message",
        "parameters": [
          {
            "type": "boolean",
            "name": "has_viewed",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "target_id",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "cards",
              "tasks",
              "records",
              "workspaces",
              "external_links",
              "templates",
              "tag_groups",
              "members"
            ],
            "type": "string",
            "name": "target_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetMessagesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listChats"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Send message",
        "parameters": [
          {
            "description": "PostChatRequest object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostChatRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Chat"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createChat"
      }
    },
    "/chats/get-unread-features": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Return all features has unread messages",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.FeatureUnread"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getChatGetUnreadFeatures"
      }
    },
    "/chats/update-has-viewed": {
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Set has viewed",
        "parameters": [
          {
            "type": "string",
            "name": "target_id",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "cards",
              "tasks",
              "records",
              "workspaces",
              "external_links",
              "templates",
              "tag_groups",
              "members"
            ],
            "type": "string",
            "name": "target_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchChatUpdateHasViewed"
      }
    },
    "/chats/{chat_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns Message",
        "parameters": [
          {
            "type": "string",
            "description": "chat id",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "has_viewed",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Message"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getChat"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete message",
        "parameters": [
          {
            "type": "string",
            "description": "ChatID",
            "name": "chat_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteChat"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Chat",
        "parameters": [
          {
            "type": "string",
            "description": "chat id",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "description": "PatchMessageRequest object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchMessageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Message"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchChat"
      }
    },
    "/chats/{chat_id}/find-page": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns number of page and a message list by message ID",
        "parameters": [
          {
            "type": "string",
            "description": "chat id",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "target_id",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "cards",
              "tasks",
              "records",
              "workspaces",
              "external_links",
              "templates",
              "tag_groups",
              "members"
            ],
            "type": "string",
            "name": "target_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.FindPageAndMessagesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getChatFindPage"
      }
    },
    "/chats/{chat_id}/reactions": {
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "React Chat",
        "parameters": [
          {
            "type": "string",
            "description": "chat id",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "description": "ReactionUpdateRequest object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.ReactionUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateChatReactions"
      }
    },
    "/chats/{chat_id}/reactions/{reaction_id}/members": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns members who reacted to the reaction",
        "parameters": [
          {
            "type": "string",
            "description": "Chat ID",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Reaction ID",
            "name": "reaction_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetMembersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getChatMembers"
      }
    },
    "/contacts": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Contacts",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "creator_tags",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "response_tags",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "status_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetContactsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listContacts"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Contact",
        "parameters": [
          {
            "description": "Contact request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Contact"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createContact"
      }
    },
    "/contacts/{contact_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Contact",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID",
            "name": "contact_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Contact"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getContact"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Contact",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID",
            "name": "contact_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteContact"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Contact",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Contact request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Contact"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchContact"
      }
    },
    "/contacts/{contact_id}/background-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Background signed url",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createContactBackgroundSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Background",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID",
            "name": "contact_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteContactBackgroundSignedUrl"
      }
    },
    "/crm-groups": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get CRMGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.CRMGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listCrmGroups"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Post CRMGroup",
        "parameters": [
          {
            "description": "Post CRM Request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostCRMGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CRMGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createCrmGroup"
      }
    },
    "/crm-groups/multi-positions": {
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update crm-group position",
        "parameters": [
          {
            "description": "CRMGroupPosition Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PutCRMGroupsPositionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateCrmGroupMultiPositions"
      }
    },
    "/crm-groups/multiple": {
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update crm groups",
        "parameters": [
          {
            "description": "CRMGroup Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "TODO: remove this field, not need anymore",
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.PutCRMGroupRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/model.CRMGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateCrmGroupMultiple"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Post CRMGroups",
        "parameters": [
          {
            "description": "Post CRMGroups Request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.PostCRMGroupRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.CRMGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createCrmGroupMultiple"
      }
    },
    "/crm-groups/{crm_group_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get CRMGroup",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CRMGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getCrmGroup"
      },
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update crm group",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "CRMGroup Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PutCRMGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CRMGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateCrmGroup"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete CRMGroup",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteCrmGroup"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update crm group",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "CRMGroup Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchCRMGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CRMGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchCrmGroup"
      }
    },
    "/crm-groups/{crm_group_id}/crms": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Post CRM",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Post CRM Request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostCRMRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CRM"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createCrm"
      }
    },
    "/crm-groups/{crm_group_id}/crms/query": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get CRMs",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "CRM Request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.GetCRMsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetCRMsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createCrmQuery"
      }
    },
    "/crm-groups/{crm_group_id}/crms/{crm_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get CRM",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "CRM ID",
            "name": "crm_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CRM"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getCrm"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete CRM",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "CRM ID",
            "name": "crm_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteCrm"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update crm",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "CRM ID",
            "name": "crm_id",
            "in": "path",
            "required": true
          },
          {
            "description": "CRM Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchCRMRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.CRM"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchCrm"
      }
    },
    "/crm-groups/{crm_group_id}/crms/{crm_id}/background-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Background signed url",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "CRM ID",
            "name": "crm_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createCrmBackgroundSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Background",
        "parameters": [
          {
            "type": "string",
            "description": "CRMGroup ID",
            "name": "crm_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "CRM ID",
            "name": "crm_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteCrmBackgroundSignedUrl"
      }
    },
    "/databases": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Database",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.DatabasesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listDatabases"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Post Database",
        "parameters": [
          {
            "description": "Post database Request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostDatabaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.DatabaseResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createDatabase"
      }
    },
    "/databases/multi-positions": {
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Database position",
        "parameters": [
          {
            "description": "DatabasePosition Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PutDatabasePositionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateDatabaseMultiPositions"
      }
    },
    "/databases/multiple": {
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update databases",
        "parameters": [
          {
            "description": "Databases Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dto.PatchDatabaseRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.DatabasesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchDatabaseMultiple"
      }
    },
    "/databases/{database_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Database",
        "parameters": [
          {
            "type": "string",
            "description": "Database ID",
            "name": "database_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.DatabaseResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getDatabase"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Database",
        "parameters": [
          {
            "type": "string",
            "description": "DataBase ID",
            "name": "database_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteDatabase"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Database",
        "parameters": [
          {
            "type": "string",
            "description": "Database ID",
            "name": "database_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Database Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchDatabaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.DatabaseResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchDatabase"
      }
    },
    "/databases/{database_id}/records": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Post Record",
        "parameters": [
          {
            "type": "string",
            "description": "Database ID",
            "name": "database_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Post Record Request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostRecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Record"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createRecord"
      }
    },
    "/databases/{database_id}/records/query": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Records",
        "parameters": [
          {
            "type": "string",
            "description": "Database ID",
            "name": "database_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Record Request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.GetRecordsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.RecordsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createRecordQuery"
      }
    },
    "/databases/{database_id}/records/{record_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Record",
        "parameters": [
          {
            "type": "string",
            "description": "Database ID",
            "name": "database_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Record ID",
            "name": "record_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Record"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getRecord"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Record",
        "parameters": [
          {
            "type": "string",
            "description": "Database ID",
            "name": "database_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Record ID",
            "name": "record_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteRecord"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Record",
        "parameters": [
          {
            "type": "string",
            "description": "Database ID",
            "name": "database_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Record ID",
            "name": "record_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "is_only_update_updateable_form_items",
            "in": "query"
          },
          {
            "description": "Record Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchRecordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Record"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchRecord"
      }
    },
    "/databases/{database_id}/records/{record_id}/background-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Background signed url",
        "parameters": [
          {
            "type": "string",
            "description": "Database ID",
            "name": "database_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Record ID",
            "name": "record_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createRecordBackgroundSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Background",
        "parameters": [
          {
            "type": "string",
            "description": "Database ID",
            "name": "database_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Record ID",
            "name": "record_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteRecordBackgroundSignedUrl"
      }
    },
    "/infographic": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Infographic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetInfographicDataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listInfographic"
      }
    },
    "/infographic/chat": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Infographic Chat",
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query_type",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetInfographicChatResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getInfographiChat"
      }
    },
    "/members": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of members",
        "parameters": [
          {
            "type": "boolean",
            "name": "ignore_current_user",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "role_tags",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "status_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetMembersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listMembers"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Inviting member to workspace",
        "parameters": [
          {
            "description": "MemberReq object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostInviteMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createMember"
      }
    },
    "/members/pic-mention": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of members",
        "parameters": [
          {
            "description": "Members body view manager request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.GetMembersByQueryParamsAndFacilitatorAndShareScope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetMembersResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createMemberPicMention"
      }
    },
    "/members/query": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of members",
        "parameters": [
          {
            "description": "Members body view manager request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.GetMembersBodyViewByManagement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetMembersManagementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createMemberQuery"
      }
    },
    "/members/team": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a team",
        "parameters": [
          {
            "description": "Members request",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.GetTeamBodyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetTeamResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createMemberTeam"
      }
    },
    "/members/{member_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Member",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getMember"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Member of Workspace",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteMember"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update member",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Member Update object",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/dto.PatchMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchMember"
      }
    },
    "/members/{member_id}/background-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Background signed url",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createMemberBackgroundSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Background",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteMemberBackgroundSignedUrl"
      }
    },
    "/members/{member_id}/default-icon-url": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Member default icon URL",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetMemberDefaultIconURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getMemberDefaultIconUrl"
      }
    },
    "/members/{member_id}/email": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update member's email",
        "parameters": [
          {
            "description": "Body request update email member",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.UpdateEmailRequest"
            }
          },
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateMemberEmail"
      }
    },
    "/members/{member_id}/icon-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create icon signed url",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createMemberIconSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Icon",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteMemberIconSignedUrl"
      }
    },
    "/members/{member_id}/icon-source": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update member icon source",
        "parameters": [
          {
            "description": "Icon source",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PutMemberIconSourceRequest"
            }
          },
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateMemberIconSource"
      }
    },
    "/members/{member_id}/idle": {
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Member Idle",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Member Update object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PutMemberIdleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateMemberIdle"
      }
    },
    "/members/{member_id}/info": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Member with Main and Sub",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "main_member_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sub_member_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetMemberResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getMemberInfo"
      }
    },
    "/members/{member_id}/member-bookmarked-items": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get MemberBookmarkedItems",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query_type",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetMemberBookmarkedItemsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listMemberBookmarkedItems"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create MemberBookmarkedItem",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Member Bookmarked Item request Object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostMemberBookmarkedItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.MemberBookmarkedItem"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createMemberBookmarkedItem"
      }
    },
    "/members/{member_id}/member-bookmarked-items/{member_bookmarked_item_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get MemberBookmarkedItem",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Bookmarke ID",
            "name": "member_bookmarked_item_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.MemberBookmarkedItem"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getMemberBookmarkedItem"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete MemberBookmarkedItem",
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Member Bookmarked Item ID",
            "name": "member_bookmarked_item_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteMemberBookmarkedItem"
      }
    },
    "/members/{member_id}/notification-token": {
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Member's notification token",
        "parameters": [
          {
            "description": "NotificationTokenReq object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.NotificationTokenRequest"
            }
          },
          {
            "type": "string",
            "description": "memberID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateMemberNotificationToken"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Member's notification token",
        "parameters": [
          {
            "description": "NotificationTokenReq object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.NotificationTokenRequestForDelete"
            }
          },
          {
            "type": "string",
            "description": "memberID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteMemberNotificationToken"
      }
    },
    "/tag-groups": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of tag group",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "color",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "display_type",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "exclude_default",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "usage_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetTagGroupsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listTagGroups"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Tag Group",
        "parameters": [
          {
            "description": "TagGroup object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostTagGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TagGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createTagGroup"
      }
    },
    "/tag-groups/color": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of tag group color",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TagGroupsColorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getTagGroupColor"
      }
    },
    "/tag-groups/default": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of tag group color",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TagResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getTagGroupDefault"
      }
    },
    "/tag-groups/{tag_group_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Tag Group",
        "parameters": [
          {
            "type": "string",
            "description": "Tag group ID",
            "name": "tag_group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TagGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getTagGroup"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Tag Group",
        "parameters": [
          {
            "type": "string",
            "description": "Tag Group ID",
            "name": "tag_group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteTagGroup"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Patch Tag Group",
        "parameters": [
          {
            "type": "string",
            "description": "Tag Group ID",
            "name": "tag_group_id",
            "in": "path",
            "required": true
          },
          {
            "description": "TagGroup object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchTagGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TagGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchTagGroup"
      }
    },
    "/tag-groups/{tag_group_id}/background-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Background signed url",
        "parameters": [
          {
            "type": "string",
            "description": "Tag group ID",
            "name": "tag_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createTagGroupBackgroundSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Background",
        "parameters": [
          {
            "type": "string",
            "description": "Tag Group ID",
            "name": "tag_group_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteTagGroupBackgroundSignedUrl"
      }
    },
    "/tasks": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Tasks",
        "parameters": [
          {
            "type": "string",
            "name": "due_date",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "FACILITATION",
              "UNEDITABLE"
            ],
            "type": "string",
            "name": "facilitator",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "measure_times",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "pic",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "enum": [
              "COMPLETED",
              "INCOMPLETE"
            ],
            "type": "string",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          },
          {
            "type": "string",
            "name": "template_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetTasksResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listTasks"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Task",
        "parameters": [
          {
            "description": "Task request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TaskResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createTask"
      }
    },
    "/tasks/summary": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get summary Task",
        "parameters": [
          {
            "enum": [
              "FACILITATION",
              "UNEDITABLE"
            ],
            "type": "string",
            "name": "facilitator",
            "in": "query"
          },
          {
            "type": "string",
            "name": "from_date",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "measure_times",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "pic",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "COMPLETED",
              "INCOMPLETE"
            ],
            "type": "string",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          },
          {
            "type": "string",
            "name": "template_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "to_date",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetSummaryTaskResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getTaskSummary"
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Task",
        "parameters": [
          {
            "type": "string",
            "description": "task ID",
            "name": "task_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TaskResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getTask"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Task",
        "parameters": [
          {
            "type": "string",
            "description": "Task ID",
            "name": "task_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteTask"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Task",
        "parameters": [
          {
            "type": "string",
            "description": "Task ID",
            "name": "task_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Task request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TaskResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchTask"
      }
    },
    "/tasks/{task_id}/background-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Background signed url",
        "parameters": [
          {
            "type": "string",
            "description": "Task ID",
            "name": "task_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createTaskBackgroundSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Background",
        "parameters": [
          {
            "type": "string",
            "description": "task ID",
            "name": "task_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteTaskBackgroundSignedUrl"
      }
    },
    "/tasks/{task_id}/pic": {
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Task",
        "parameters": [
          {
            "type": "string",
            "description": "Task ID",
            "name": "task_id",
            "in": "path",
            "required": true
          },
          {
            "description": "UpdatePICRequest request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.UpdatePICRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TaskResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "updateTaskPic"
      }
    },
    "/tasks/{task_id}/pic/{member_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get task's pic detail",
        "parameters": [
          {
            "type": "string",
            "description": "task ID",
            "name": "task_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "member ID",
            "name": "member_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TaskPICDetail"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getTask{member_id}"
      }
    },
    "/tasks/{task_id}/self": {
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Status Task of PIC",
        "parameters": [
          {
            "type": "string",
            "description": "task ID",
            "name": "task_id",
            "in": "path",
            "required": true
          },
          {
            "description": "PatchTaskRequestBySelf request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchTaskRequestBySelf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TaskResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchTaskSelf"
      }
    },
    "/templates": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Templates",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "estimated_times",
            "in": "query"
          },
          {
            "enum": [
              "FACILITATION",
              "UNEDITABLE"
            ],
            "type": "string",
            "name": "facilitator",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "measure_times",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "number_using",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "pic",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "enum": [
              "COMPLETED",
              "INCOMPLETE"
            ],
            "type": "string",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "task_enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetTemplatesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listTemplates"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Template",
        "parameters": [
          {
            "description": "Template request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TemplateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createTemplate"
      }
    },
    "/templates/tasks": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Templates for filter task",
        "parameters": [
          {
            "type": "string",
            "name": "due_date",
            "in": "query"
          },
          {
            "enum": [
              "FACILITATION",
              "UNEDITABLE"
            ],
            "type": "string",
            "name": "facilitator",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "measure_times",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "pic",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "enum": [
              "COMPLETED",
              "INCOMPLETE"
            ],
            "type": "string",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetTemplatesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getTemplateTasks"
      }
    },
    "/templates/{template_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Template",
        "parameters": [
          {
            "type": "string",
            "description": "Template ID",
            "name": "template_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TemplateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getTemplate"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Template",
        "parameters": [
          {
            "type": "string",
            "description": "Template ID",
            "name": "template_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteTemplate"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Template",
        "parameters": [
          {
            "type": "string",
            "description": "Template ID",
            "name": "template_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Template request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.TemplateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchTemplate"
      }
    },
    "/templates/{template_id}/background-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Background signed url",
        "parameters": [
          {
            "type": "string",
            "description": "Template ID",
            "name": "template_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createTemplateBackgroundSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Background",
        "parameters": [
          {
            "type": "string",
            "description": "Template ID",
            "name": "template_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteTemplateBackgroundSignedUrl"
      }
    },
    "/works": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Works",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "assignee_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "creator_tags",
            "in": "query"
          },
          {
            "type": "string",
            "name": "crm_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "due_date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "estimated_times",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "max_estimated_time",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "period",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "status_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          },
          {
            "type": "string",
            "name": "template_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetWorksResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "listWorks"
      },
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Work",
        "parameters": [
          {
            "description": "Work request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PostWorkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Work"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createWork"
      }
    },
    "/works/me": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Works",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "assignee_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "creator_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "estimated_times",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "status_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetWorksResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getWorkMe"
      }
    },
    "/works/summary": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get summary Work",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "assignee_tags",
            "in": "query"
          },
          {
            "enum": [
              "MONTH",
              "WEEK"
            ],
            "type": "string",
            "name": "calender_view",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "creator_tags",
            "in": "query"
          },
          {
            "type": "string",
            "name": "crm_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "due_date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "estimated_times",
            "in": "query"
          },
          {
            "type": "string",
            "name": "from_date",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "name": "max_estimated_time",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "period",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "status_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          },
          {
            "type": "string",
            "name": "template_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "to_date",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetSummaryWorkResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getWorkSummary"
      }
    },
    "/works/summary-template": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get summary Template Work",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "assignee_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "creator_tags",
            "in": "query"
          },
          {
            "type": "string",
            "name": "crm_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "due_date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "estimated_times",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "max_estimated_time",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "period",
            "in": "query"
          },
          {
            "type": "string",
            "name": "query",
            "in": "query"
          },
          {
            "enum": [
              "-"
            ],
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "status_tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "name": "tag_ids",
            "in": "query"
          },
          {
            "type": "string",
            "name": "template_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.GetSummaryTemplateWorkResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getWorkSummaryTemplate"
      }
    },
    "/works/{work_id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Work",
        "parameters": [
          {
            "type": "string",
            "description": "Work ID",
            "name": "work_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Work"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "getWork"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Work",
        "parameters": [
          {
            "type": "string",
            "description": "Work ID",
            "name": "work_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteWork"
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Work",
        "parameters": [
          {
            "type": "string",
            "description": "Work ID",
            "name": "work_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Work request object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dto.PatchWorkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.Work"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "patchWork"
      }
    },
    "/works/{work_id}/background-signed-url": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Background signed url",
        "parameters": [
          {
            "type": "string",
            "description": "Work ID",
            "name": "work_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Method is GET or PUT",
            "name": "method",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dto.SignedURLResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "createWorkBackgroundSignedUrl"
      },
      "delete": {
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Background",
        "parameters": [
          {
            "type": "string",
            "description": "Work ID",
            "name": "work_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/dto.FailureResponse"
            }
          }
        },
        "operationId": "deleteWorkBackgroundSignedUrl"
      }
    }
  },
  "definitions": {
    "datatypes.JSONMap": {
      "type": "object",
      "additionalProperties": true
    },
    "dto.CRM": {
      "type": "object",
      "required": [
        "created_at",
        "creator_id",
        "crm_group_id",
        "id",
        "name",
        "status",
        "tags",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/model.Member"
        },
        "creator_id": {
          "type": "string"
        },
        "crm_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.CRMFormItem"
          }
        },
        "crm_group_id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "last_message_time": {
          "type": "string"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "member_bookmarked_item_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "publishable": {
          "type": "boolean"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "ARCHIVE",
            "PUBLISHED"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.CRMGroup": {
      "type": "object",
      "required": [
        "caption",
        "created_at",
        "icon_string",
        "id",
        "title",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "icon_string": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_default": {
          "type": "boolean"
        },
        "position": {
          "type": "number"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.CardResponse": {
      "type": "object",
      "required": [
        "created_at",
        "id",
        "title",
        "updated_at"
      ],
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "chat_info": {
          "$ref": "#/definitions/dto.ChatInfo"
        },
        "created_at": {
          "type": "string"
        },
        "created_by_o_auth_id": {
          "type": "string"
        },
        "creator_icon": {
          "type": "string"
        },
        "creator_icon_key": {
          "type": "string"
        },
        "creator_id": {
          "type": "string"
        },
        "creator_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "facilitator": {
          "$ref": "#/definitions/dto.FacilitatorResponse"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "member_bookmarked_item_id": {
          "type": "string"
        },
        "message_id": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "origin_id": {
          "type": "string"
        },
        "origin_type": {
          "type": "string"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "root_id": {
          "type": "string"
        },
        "root_type": {
          "type": "string"
        },
        "secondary_color": {
          "type": "string"
        },
        "share_scope": {
          "$ref": "#/definitions/dto.ShareScopeResponse"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "task_enabled": {
          "type": "boolean"
        },
        "template_id": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "dto.Chat": {
      "type": "object",
      "required": [
        "actor_id",
        "created_at",
        "id",
        "message",
        "target_id",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/model.Member"
        },
        "actor_id": {
          "type": "string"
        },
        "additional_data": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "card": {
          "$ref": "#/definitions/dto.CardResponse"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "member_bookmarked_item_id": {
          "type": "string"
        },
        "mentioned_members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.MentionedMember"
          }
        },
        "message": {
          "type": "string"
        },
        "message_type": {
          "type": "string"
        },
        "target_id": {
          "type": "string"
        },
        "target_type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.ChatInfo": {
      "type": "object",
      "required": [
        "id",
        "last_mess_time",
        "target_id",
        "workspace_id"
      ],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_private_chat": {
          "type": "boolean"
        },
        "last_mess_time": {
          "type": "string"
        },
        "latest_users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.ChatInfoMember"
          }
        },
        "target_id": {
          "type": "string"
        },
        "target_type": {
          "type": "string"
        },
        "total_mess": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.ChatInfoMember": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "icon": {
          "type": "string"
        },
        "icon_key": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "dto.Contact": {
      "type": "object",
      "required": [
        "created_at",
        "creator",
        "creator_id",
        "id",
        "tags",
        "title",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "created_by_o_auth_id": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/model.Member"
        },
        "creator_id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "expired_at": {
          "type": "string"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "last_message_time": {
          "type": "string"
        },
        "last_published_at": {
          "type": "string"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "member_bookmarked_item_id": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "publishable": {
          "type": "boolean"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "task_pic_users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Member"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.DatabaseResponse": {
      "type": "object",
      "required": [
        "icon_string",
        "id",
        "title",
        "workspace_id"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "display_chat_on_card": {
          "type": "boolean"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "icon_string": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_default": {
          "type": "boolean"
        },
        "position": {
          "type": "number"
        },
        "title": {
          "type": "string"
        },
        "updateable_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.DatabasesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.DatabaseResponse"
          }
        }
      }
    },
    "dto.DisabledFeature": {
      "type": "object",
      "properties": {
        "feature_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "dto.ExternalLinkResponse": {
      "type": "object",
      "required": [
        "created_at",
        "expired_at",
        "id",
        "name",
        "o_auth_enabled",
        "updated_at",
        "webhook_enabled",
        "workspace_id"
      ],
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "chat_info": {
          "$ref": "#/definitions/dto.ChatInfo"
        },
        "created_at": {
          "type": "string"
        },
        "creator_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "expired_at": {
          "type": "string"
        },
        "facilitator": {
          "$ref": "#/definitions/dto.FacilitatorResponse"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "has_new_message": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "icon_key": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "o_auth": {
          "$ref": "#/definitions/model.OAuth"
        },
        "o_auth_enabled": {
          "type": "boolean"
        },
        "o_auth_id": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondary_color": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "PUBLISHED"
          ]
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "webhook": {
          "$ref": "#/definitions/model.Webhook"
        },
        "webhook_enabled": {
          "type": "boolean"
        },
        "webhook_id": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.FacilitatorMemberResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "icon_key": {
          "type": "string"
        },
        "member_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.MemberFormItem"
          }
        },
        "member_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        }
      }
    },
    "dto.FacilitatorResponse": {
      "type": "object",
      "properties": {
        "facilitator_members_response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FacilitatorMemberResponse"
          }
        },
        "facilitator_roles_response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FacilitatorRoleResponse"
          }
        },
        "facilitator_tags_response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FacilitatorTagResponse"
          }
        }
      }
    },
    "dto.FacilitatorRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        }
      }
    },
    "dto.FacilitatorTagResponse": {
      "type": "object",
      "properties": {
        "Tag_id": {
          "type": "string"
        },
        "tag_group_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.FailureResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "dto.FeatureUnread": {
      "type": "object",
      "required": [
        "target_type"
      ],
      "properties": {
        "database_id": {
          "type": "string"
        },
        "target_type": {
          "type": "string",
          "enum": [
            "tasks",
            "records",
            "workspaces",
            "external_links",
            "templates",
            "tag_groups",
            "members"
          ]
        }
      }
    },
    "dto.FilteringCheckbox": {
      "type": "object",
      "required": [
        "form_item_id"
      ],
      "properties": {
        "form_item_id": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.FilteringDate": {
      "type": "object",
      "required": [
        "form_item_id"
      ],
      "properties": {
        "form_item_id": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "dto.FilteringDropdown": {
      "type": "object",
      "required": [
        "form_item_id"
      ],
      "properties": {
        "form_item_id": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.FilteringNumber": {
      "type": "object",
      "required": [
        "form_item_id"
      ],
      "properties": {
        "form_item_id": {
          "type": "string"
        },
        "max": {
          "type": "number"
        },
        "min": {
          "type": "number"
        }
      }
    },
    "dto.FilteringRadioButton": {
      "type": "object",
      "required": [
        "form_item_id"
      ],
      "properties": {
        "form_item_id": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.FilteringText": {
      "type": "object",
      "required": [
        "form_item_id"
      ],
      "properties": {
        "form_item_id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "dto.FilteringTime": {
      "type": "object",
      "required": [
        "form_item_id"
      ],
      "properties": {
        "form_item_id": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "dto.FindPageAndMessagesResponse": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.Message"
          }
        },
        "page": {
          "type": "number"
        }
      }
    },
    "dto.FomItemImageURL": {
      "type": "object",
      "properties": {
        "image_path": {
          "type": "string"
        },
        "size_original": {
          "type": "string"
        }
      }
    },
    "dto.FormItemImageSignedURLObjectRequest": {
      "type": "object",
      "required": [
        "image_paths"
      ],
      "properties": {
        "image_paths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.GetCRMsReq": {
      "type": "object",
      "properties": {
        "FilteringCheckboxReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringCheckbox"
          }
        },
        "FilteringDateReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDate"
          }
        },
        "FilteringDropdownReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDropdown"
          }
        },
        "FilteringNumberReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringNumber"
          }
        },
        "FilteringRadioButtonReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringRadioButton"
          }
        },
        "FilteringTextReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringText"
          }
        },
        "FilteringTimeReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringTime"
          }
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "query": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "status_tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.GetCRMsResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.CRM"
          }
        }
      }
    },
    "dto.GetContactsResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.Contact"
          }
        }
      }
    },
    "dto.GetInfographicChatResponse": {
      "type": "object",
      "properties": {
        "count": {
          "description": "only use when query_type is COUNT",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.InfographicChat"
          }
        }
      }
    },
    "dto.GetInfographicDataResponse": {
      "type": "object",
      "properties": {
        "task_count": {
          "type": "integer"
        }
      }
    },
    "dto.GetMapsGeocodeResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/maps.GeocodingResult"
          }
        }
      }
    },
    "dto.GetMapsPlacesSearchResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/maps.PlacesSearchResult"
          }
        }
      }
    },
    "dto.GetMemberBookmarkedItemsResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.MemberBookmarkedItem"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "dto.GetMemberDefaultIconURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "dto.GetMemberResponse": {
      "type": "object",
      "properties": {
        "main_member": {
          "$ref": "#/definitions/model.Member"
        },
        "main_pic_task_count": {
          "type": "integer"
        },
        "main_task_count": {
          "description": "TODO: need to remove",
          "type": "integer"
        },
        "member": {
          "$ref": "#/definitions/model.Member"
        },
        "sub_member": {
          "$ref": "#/definitions/model.Member"
        },
        "sub_pic_task_count": {
          "type": "integer"
        },
        "sub_task_count": {
          "description": "TODO: need to remove",
          "type": "integer"
        }
      }
    },
    "dto.GetMembersBodyViewByManagement": {
      "type": "object",
      "properties": {
        "FilteringCheckboxReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringCheckbox"
          }
        },
        "FilteringDateReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDate"
          }
        },
        "FilteringDropdownReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDropdown"
          }
        },
        "FilteringNumberReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringNumber"
          }
        },
        "FilteringRadioButtonReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringRadioButton"
          }
        },
        "FilteringTextReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringText"
          }
        },
        "FilteringTimeReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringTime"
          }
        },
        "ignore_current_user": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "query": {
          "type": "string"
        },
        "role_tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sort": {
          "type": "string"
        },
        "status_tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.GetMembersByQueryParamsAndFacilitatorAndShareScope": {
      "type": "object",
      "properties": {
        "FilteringCheckboxReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringCheckbox"
          }
        },
        "FilteringDateReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDate"
          }
        },
        "FilteringDropdownReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDropdown"
          }
        },
        "FilteringNumberReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringNumber"
          }
        },
        "FilteringRadioButtonReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringRadioButton"
          }
        },
        "FilteringTextReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringText"
          }
        },
        "FilteringTimeReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringTime"
          }
        },
        "ignore_current_user": {
          "type": "boolean"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "query": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/dto.Scope"
        },
        "sort": {
          "type": "string"
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.GetMembersManagementResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.Member"
          }
        }
      }
    },
    "dto.GetMembersResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.Member"
          }
        }
      }
    },
    "dto.GetMessagesResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.Message"
          }
        }
      }
    },
    "dto.GetRecordsReq": {
      "type": "object",
      "properties": {
        "FilteringCheckboxReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringCheckbox"
          }
        },
        "FilteringDateReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDate"
          }
        },
        "FilteringDropdownReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDropdown"
          }
        },
        "FilteringNumberReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringNumber"
          }
        },
        "FilteringRadioButtonReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringRadioButton"
          }
        },
        "FilteringTextReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringText"
          }
        },
        "FilteringTimeReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringTime"
          }
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "query": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.GetSignedURLResponse": {
      "type": "object",
      "properties": {
        "signed_urls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FomItemImageURL"
          }
        }
      }
    },
    "dto.GetSummaryTask": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "status_indicating": {
          "type": "string",
          "enum": [
            "BEFORE_START",
            "IN_PROGRESS",
            "COMPLETED",
            "INCOMPLETE",
            "PAUSED",
            "OVERTIME"
          ]
        },
        "task_counting": {
          "type": "integer"
        }
      }
    },
    "dto.GetSummaryTaskResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.GetSummaryTask"
          }
        }
      }
    },
    "dto.GetSummaryTemplateWork": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/model.Template"
        },
        "works_indicating": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.WorkIndicating"
          }
        }
      }
    },
    "dto.GetSummaryTemplateWorkResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.GetSummaryTemplateWork"
          }
        }
      }
    },
    "dto.GetSummaryWork": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "status_indicating": {
          "type": "string",
          "enum": [
            "DRAFT",
            "BEFORE_START",
            "IN_PROGRESS",
            "COMPLETED",
            "INCOMPLETE",
            "PAUSED",
            "OVERTIME"
          ]
        },
        "work_counting": {
          "type": "integer"
        },
        "works": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Work"
          }
        }
      }
    },
    "dto.GetSummaryWorkResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.GetSummaryWork"
          }
        }
      }
    },
    "dto.GetTagGroupsResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.TagGroup"
          }
        }
      }
    },
    "dto.GetTasksResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.TaskResponse"
          }
        }
      }
    },
    "dto.GetTeamBodyRequest": {
      "type": "object",
      "properties": {
        "FilteringCheckboxReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringCheckbox"
          }
        },
        "FilteringDateReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDate"
          }
        },
        "FilteringDropdownReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringDropdown"
          }
        },
        "FilteringNumberReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringNumber"
          }
        },
        "FilteringRadioButtonReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringRadioButton"
          }
        },
        "FilteringTextReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringText"
          }
        },
        "FilteringTimeReq": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.FilteringTime"
          }
        },
        "query": {
          "type": "string"
        },
        "role_tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.GetTeamResponse": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.MemberTeam"
          }
        }
      }
    },
    "dto.GetTemplatesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.TemplateResponse"
          }
        }
      }
    },
    "dto.GetWorksResponse": {
      "type": "object",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.Work"
          }
        }
      }
    },
    "dto.InfographicChat": {
      "type": "object",
      "required": [
        "actor_id",
        "created_at",
        "id",
        "message",
        "target_id",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/model.Member"
        },
        "actor_id": {
          "type": "string"
        },
        "additional_data": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "mentioned_members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.MentionedMember"
          }
        },
        "message": {
          "type": "string"
        },
        "message_type": {
          "type": "string"
        },
        "target_id": {
          "type": "string"
        },
        "target_info": {
          "$ref": "#/definitions/dto.MessageTargetInfo"
        },
        "target_type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.Member": {
      "type": "object",
      "required": [
        "created_at",
        "id",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "background_text": {
          "type": "string"
        },
        "chat_info": {
          "$ref": "#/definitions/dto.ChatInfo"
        },
        "created_at": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "icon_key": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "invited_at": {
          "type": "string"
        },
        "inviter_id": {
          "type": "string"
        },
        "member_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.MemberFormItem"
          }
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "optional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "primary_color": {
          "type": "string"
        },
        "provider_id": {
          "type": "string",
          "enum": [
            "google.com",
            "apple.com"
          ]
        },
        "reverse_background": {
          "type": "boolean"
        },
        "role": {
          "type": "string",
          "enum": [
            "MANAGER",
            "STAFF",
            "WORKER"
          ]
        },
        "secondary_color": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INVITING",
            "SUSPENDED"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.MemberBookmarkedItem": {
      "type": "object",
      "required": [
        "bookmarked_at",
        "created_at",
        "id",
        "member_id",
        "target_id",
        "updated_at"
      ],
      "properties": {
        "bookmarked_at": {
          "type": "string"
        },
        "card": {
          "$ref": "#/definitions/dto.CardResponse"
        },
        "chat_info": {
          "$ref": "#/definitions/dto.ChatInfo"
        },
        "chat_room": {
          "$ref": "#/definitions/model.ChatRoom"
        },
        "chat_room_id": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/model.Contact"
        },
        "contact_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "crm": {
          "$ref": "#/definitions/model.CRM"
        },
        "crm_id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "last_work_status": {
          "type": "string"
        },
        "member_id": {
          "type": "string"
        },
        "record": {
          "$ref": "#/definitions/dto.Record"
        },
        "target_id": {
          "type": "string"
        },
        "target_type": {
          "type": "string"
        },
        "task": {
          "$ref": "#/definitions/dto.TaskResponse"
        },
        "updated_at": {
          "type": "string"
        },
        "work": {
          "$ref": "#/definitions/model.Work"
        },
        "work_id": {
          "type": "string"
        }
      }
    },
    "dto.MemberIndicator": {
      "type": "object",
      "required": [
        "member_id"
      ],
      "properties": {
        "in_charge_at": {
          "type": "string"
        },
        "member_icon": {
          "type": "string"
        },
        "member_icon_key": {
          "type": "string"
        },
        "member_id": {
          "type": "string"
        },
        "member_name": {
          "type": "string"
        }
      }
    },
    "dto.MemberRelation": {
      "type": "object",
      "properties": {
        "icon_url": {
          "type": "string"
        },
        "member_id": {
          "type": "string"
        },
        "member_name": {
          "type": "string"
        }
      }
    },
    "dto.MemberTeam": {
      "type": "object",
      "properties": {
        "has_create_task": {
          "type": "boolean"
        },
        "icon_url": {
          "type": "string"
        },
        "member_id": {
          "type": "string"
        },
        "member_name": {
          "type": "string"
        },
        "member_relations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.MemberRelation"
          }
        }
      }
    },
    "dto.Message": {
      "type": "object",
      "properties": {
        "card": {
          "$ref": "#/definitions/dto.CardResponse"
        },
        "member_bookmarked_item_id": {
          "type": "string"
        },
        "message": {
          "$ref": "#/definitions/model.Chat"
        },
        "reactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.Reaction"
          }
        },
        "target_info": {
          "$ref": "#/definitions/dto.MessageTargetInfo"
        },
        "task": {
          "$ref": "#/definitions/dto.TaskResponse"
        }
      }
    },
    "dto.MessageTargetInfo": {
      "type": "object",
      "required": [
        "database_id",
        "id",
        "title"
      ],
      "properties": {
        "database_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.NotificationTokenRequest": {
      "type": "object",
      "required": [
        "device_id",
        "notification_token"
      ],
      "properties": {
        "device_id": {
          "type": "string"
        },
        "notification_token": {
          "type": "string"
        }
      }
    },
    "dto.NotificationTokenRequestForDelete": {
      "type": "object",
      "required": [
        "device_id"
      ],
      "properties": {
        "device_id": {
          "type": "string"
        }
      }
    },
    "dto.PatchCRMGroupRequest": {
      "type": "object",
      "properties": {
        "crm_caption": {
          "type": "string"
        },
        "crm_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "crm_icon_string": {
          "type": "string"
        },
        "formItemIDsDelete": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PatchCRMRequest": {
      "type": "object",
      "properties": {
        "additional_crm_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "crm_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PutCRMFormItemRequest"
          }
        },
        "delete_additional_crm_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "ARCHIVE",
            "PUBLISHED"
          ]
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        }
      }
    },
    "dto.PatchCardRequest": {
      "type": "object",
      "properties": {
        "_delete_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "illustration": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "patch_facilitator": {
          "$ref": "#/definitions/dto.PatchFacilitatorRequest"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PatchContactRequest": {
      "type": "object",
      "properties": {
        "_delete_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content": {
          "type": "string"
        },
        "expired_at": {
          "type": "string"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "manage_task_process_enabled": {
          "type": "boolean"
        },
        "opacity": {
          "type": "number"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "required_answers": {
          "type": "boolean"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "PUBLISHED"
          ]
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PatchDatabaseRequest": {
      "type": "object",
      "properties": {
        "database_caption": {
          "type": "string"
        },
        "database_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "database_icon_string": {
          "type": "string"
        },
        "display_chat_on_card": {
          "type": "boolean"
        },
        "formItemIDsDelete": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updateable_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        }
      }
    },
    "dto.PatchExternalLinkRequest": {
      "type": "object",
      "properties": {
        "_delete_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "expired_at": {
          "type": "string"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "illustration": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "o_auth_enabled": {
          "type": "boolean"
        },
        "opacity": {
          "type": "number"
        },
        "patch_facilitator_member": {
          "$ref": "#/definitions/dto.PatchFacilitatorMember"
        },
        "patch_facilitator_role": {
          "$ref": "#/definitions/dto.PatchFacilitatorRole"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondary_color": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "PUBLISHED"
          ]
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "webhook": {
          "$ref": "#/definitions/dto.BaseWebhookRequest"
        },
        "webhook_enabled": {
          "type": "boolean"
        }
      }
    },
    "dto.PatchFacilitatorMember": {
      "type": "object",
      "properties": {
        "member_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "dto.PatchFacilitatorRequest": {
      "type": "object",
      "properties": {
        "patch_facilitator_member": {
          "$ref": "#/definitions/dto.PatchFacilitatorMember"
        },
        "patch_facilitator_tag": {
          "$ref": "#/definitions/dto.PatchFacilitatorTag"
        }
      }
    },
    "dto.PatchFacilitatorRole": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "dto.PatchFacilitatorTag": {
      "type": "object",
      "properties": {
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "dto.PatchFormItemRequest": {
      "type": "object",
      "required": [
        "id",
        "name",
        "type"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_lock_settings": {
          "type": "boolean"
        },
        "item_required": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "position": {
          "type": "number"
        },
        "props": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "type": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "TEXT",
            "DROPDOWN",
            "CHECKBOX",
            "RADIO_BUTTON",
            "DATETIME",
            "LINK",
            "NUMBER",
            "IMAGE",
            "LOCATION",
            "CRM",
            "MEMBER"
          ]
        }
      }
    },
    "dto.PatchMemberRequest": {
      "type": "object",
      "properties": {
        "_delete_optional_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "background_text": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "member_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PutMemberFormItemRequest"
          }
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "optional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "role": {
          "type": "string",
          "enum": [
            "MANAGER",
            "STAFF",
            "WORKER"
          ]
        },
        "secondary_color": {
          "type": "string"
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        }
      }
    },
    "dto.PatchMessageRequest": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "dto.PatchRecordRequest": {
      "type": "object",
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "database_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PutRecordFormItemRequest"
          }
        },
        "delete_additional_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delete_updateable_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "patch_facilitator": {
          "$ref": "#/definitions/dto.PatchFacilitatorRequest"
        },
        "patch_share_scope": {
          "$ref": "#/definitions/dto.PathShareScope"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updateable_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        }
      }
    },
    "dto.PatchShareScopeMember": {
      "type": "object",
      "properties": {
        "member_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "dto.PatchShareScopeTag": {
      "type": "object",
      "properties": {
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "dto.PatchTagGroupRequest": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "maxLength": 2,
          "minLength": 1
        },
        "delete_tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "illustration": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "only_single_value_is_selected": {
          "type": "boolean"
        },
        "opacity": {
          "type": "number"
        },
        "patch_facilitator_member": {
          "$ref": "#/definitions/dto.PatchFacilitatorMember"
        },
        "patch_facilitator_role": {
          "$ref": "#/definitions/dto.PatchFacilitatorRole"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.UpdateTagRequest"
          }
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        }
      }
    },
    "dto.PatchTaskAssigneeReportFormItem": {
      "type": "object",
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "form_item_id": {
          "type": "string"
        }
      }
    },
    "dto.PatchTaskRequest": {
      "type": "object",
      "properties": {
        "_delete_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "content": {
          "type": "string"
        },
        "due_date": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer",
          "enum": [
            -1,
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            240,
            480
          ]
        },
        "illustration": {
          "type": "string"
        },
        "is_remove_all_pic": {
          "type": "boolean"
        },
        "opacity": {
          "type": "number"
        },
        "patch_facilitator": {
          "$ref": "#/definitions/dto.PatchFacilitatorRequest"
        },
        "patch_share_scope": {
          "$ref": "#/definitions/dto.PathShareScope"
        },
        "pic_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "primary_color": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "timing_enabled": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PatchTaskRequestBySelf": {
      "type": "object",
      "properties": {
        "due_date": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "BEFORE_START",
            "IN_PROGRESS",
            "PAUSED",
            "COMPLETED",
            "INCOMPLETE"
          ]
        },
        "task_assignee_report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchTaskAssigneeReportFormItem"
          }
        },
        "total_work_time": {
          "type": "integer"
        }
      }
    },
    "dto.PatchTemplateRequest": {
      "type": "object",
      "properties": {
        "_delete_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "content": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer",
          "enum": [
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            260,
            480
          ]
        },
        "illustration": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "patch_facilitator": {
          "$ref": "#/definitions/dto.PatchFacilitatorRequest"
        },
        "patch_share_scope": {
          "$ref": "#/definitions/dto.PathShareScope"
        },
        "primary_color": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "task_enabled": {
          "type": "boolean"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "timing_enabled": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PatchWorkRequest": {
      "type": "object",
      "properties": {
        "_delete_form_item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "assignee_id": {
          "type": "string"
        },
        "can_more_than_estimated_time": {
          "type": "boolean"
        },
        "content": {
          "type": "string"
        },
        "due_date": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer",
          "enum": [
            -1,
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            240,
            480
          ]
        },
        "opacity": {
          "type": "number"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "BEFORE_START",
            "IN_PROGRESS",
            "PAUSED",
            "COMPLETED",
            "INCOMPLETE"
          ]
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        },
        "total_work_time": {
          "type": "integer"
        }
      }
    },
    "dto.PatchWorkspaceRequest": {
      "type": "object",
      "properties": {
        "date_change_time": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "disabledFeature": {
          "$ref": "#/definitions/dto.DisabledFeature"
        },
        "form_item_ids_delete": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        },
        "illustration": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number_of_actual_months": {
          "type": "integer"
        },
        "number_of_intended_months": {
          "type": "integer"
        },
        "opacity": {
          "type": "number"
        },
        "patch_facilitator_member": {
          "$ref": "#/definitions/dto.PatchFacilitatorMember"
        },
        "patch_facilitator_role": {
          "$ref": "#/definitions/dto.PatchFacilitatorRole"
        },
        "primary_color": {
          "type": "string"
        },
        "primary_language": {
          "type": "string",
          "enum": [
            "vi",
            "en",
            "ja"
          ]
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "timezone": {
          "type": "string"
        },
        "workspace_form_item_ids_delete": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workspace_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PatchFormItemRequest"
          }
        }
      }
    },
    "dto.PathShareScope": {
      "type": "object",
      "properties": {
        "patch_share_scope_member": {
          "$ref": "#/definitions/dto.PatchShareScopeMember"
        },
        "patch_share_scope_tag": {
          "$ref": "#/definitions/dto.PatchShareScopeTag"
        }
      }
    },
    "dto.PostCRMFormItemRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "dto.PostCRMGroupRequest": {
      "type": "object",
      "required": [
        "crm_caption",
        "title"
      ],
      "properties": {
        "crm_caption": {
          "type": "string"
        },
        "crm_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PutFormItemRequest"
          }
        },
        "crm_icon_string": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PostCRMRequest": {
      "type": "object",
      "required": [
        "name",
        "status"
      ],
      "properties": {
        "additional_crm_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostFormItemRequest"
          }
        },
        "description": {
          "type": "string"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostCRMFormItemRequest"
          }
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "ARCHIVE",
            "PUBLISH"
          ]
        },
        "tag_ids": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        }
      }
    },
    "dto.PostCardRequest": {
      "type": "object",
      "required": [
        "facilitator",
        "origin_id",
        "origin_type",
        "title"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "facilitator": {
          "$ref": "#/definitions/dto.PostFacilitator"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostFormItemRequest"
          }
        },
        "illustration": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "origin_id": {
          "type": "string"
        },
        "origin_type": {
          "type": "string"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "template_id": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PostChatRequest": {
      "type": "object",
      "required": [
        "message",
        "message_id",
        "target_id",
        "target_type"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "message_id": {
          "type": "string"
        },
        "message_type": {
          "type": "string"
        },
        "target_id": {
          "type": "string"
        },
        "target_type": {
          "type": "string",
          "enum": [
            "cards",
            "tasks",
            "records",
            "workspaces",
            "external_links",
            "templates",
            "tag_groups",
            "members"
          ]
        }
      }
    },
    "dto.PostContactRequest": {
      "type": "object",
      "required": [
        "status",
        "title"
      ],
      "properties": {
        "background_text": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "expired_at": {
          "type": "string"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostFormItemRequest"
          }
        },
        "manage_task_process_enabled": {
          "type": "boolean"
        },
        "opacity": {
          "type": "number"
        },
        "record_id": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostFormItemRequest"
          }
        },
        "required_answers": {
          "type": "boolean"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "PUBLISHED"
          ]
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PostDatabaseRequest": {
      "type": "object",
      "required": [
        "caption",
        "title"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "database_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PutFormItemRequest"
          }
        },
        "database_icon_string": {
          "type": "string"
        },
        "display_chat_on_card": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "updateable_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PutFormItemRequest"
          }
        }
      }
    },
    "dto.PostFacilitator": {
      "type": "object",
      "properties": {
        "member_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.PostFacilitatorRole": {
      "type": "object",
      "properties": {
        "member_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string"
        }
      }
    },
    "dto.PostFormItemRequest": {
      "type": "object",
      "required": [
        "id",
        "name",
        "type"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_lock_settings": {
          "type": "boolean"
        },
        "item_required": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "props": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "type": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "TEXT",
            "DROPDOWN",
            "CHECKBOX",
            "RADIO_BUTTON",
            "DATETIME",
            "LINK",
            "NUMBER",
            "IMAGE",
            "LOCATION",
            "CRM",
            "MEMBER"
          ]
        }
      }
    },
    "dto.PostInviteMemberRequest": {
      "type": "object",
      "required": [
        "email",
        "name",
        "role",
        "tag_ids"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "MANAGER",
            "STAFF",
            "WORKER"
          ]
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.PostMemberBookmarkedItemRequest": {
      "type": "object",
      "properties": {
        "chat_room_id": {
          "type": "string"
        },
        "contact_id": {
          "type": "string"
        },
        "crm_id": {
          "type": "string"
        },
        "target_id": {
          "type": "string"
        },
        "target_type": {
          "type": "string"
        },
        "work_id": {
          "type": "string"
        }
      }
    },
    "dto.PostRecordFormItemRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "dto.PostRecordRequest": {
      "type": "object",
      "required": [
        "facilitator",
        "name"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostFormItemRequest"
          }
        },
        "description": {
          "type": "string"
        },
        "facilitator": {
          "$ref": "#/definitions/dto.PostFacilitator"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostRecordFormItemRequest"
          }
        },
        "illustration": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "share_scope": {
          "$ref": "#/definitions/dto.ShareScope"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updateable_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostFormItemRequest"
          }
        }
      }
    },
    "dto.PostTagGroupRequest": {
      "type": "object",
      "required": [
        "color",
        "facilitator_role",
        "name"
      ],
      "properties": {
        "color": {
          "type": "string",
          "maxLength": 2,
          "minLength": 1
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "facilitator_role": {
          "$ref": "#/definitions/dto.PostFacilitatorRole"
        },
        "generated_by_ai": {
          "type": "boolean"
        },
        "illustration": {
          "type": "string"
        },
        "model_name": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "only_single_value_is_selected": {
          "type": "boolean"
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostTagRequest"
          }
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        }
      }
    },
    "dto.PostTagRequest": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "dto.PostTaskFormItemRequest": {
      "type": "object",
      "required": [
        "id",
        "name",
        "type"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_lock_settings": {
          "type": "boolean"
        },
        "item_required": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "props": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "type": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "TEXT",
            "DROPDOWN",
            "CHECKBOX",
            "RADIO_BUTTON",
            "DATETIME",
            "LINK",
            "NUMBER",
            "IMAGE",
            "LOCATION",
            "CRM",
            "MEMBER"
          ]
        }
      }
    },
    "dto.PostTaskRequest": {
      "type": "object",
      "required": [
        "due_date",
        "facilitator",
        "title"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostTaskFormItemRequest"
          }
        },
        "content": {
          "type": "string"
        },
        "due_date": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer",
          "enum": [
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            240,
            480
          ]
        },
        "facilitator": {
          "$ref": "#/definitions/dto.PostFacilitator"
        },
        "illustration": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "origin_id": {
          "type": "string"
        },
        "origin_type": {
          "type": "string"
        },
        "pic_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "primary_color": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostTaskFormItemRequest"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "share_scope": {
          "$ref": "#/definitions/dto.ShareScope"
        },
        "template_id": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "timing_enabled": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PostTemplateRequest": {
      "type": "object",
      "required": [
        "estimated_time",
        "facilitator",
        "title"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostFormItemRequest"
          }
        },
        "content": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer",
          "enum": [
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            260,
            480
          ]
        },
        "facilitator": {
          "$ref": "#/definitions/dto.PostFacilitator"
        },
        "illustration": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostFormItemRequest"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "share_scope": {
          "$ref": "#/definitions/dto.ShareScope"
        },
        "task_enabled": {
          "type": "boolean"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "timing_enabled": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PostWorkFormItemRequest": {
      "type": "object",
      "required": [
        "id",
        "name",
        "type"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_lock_settings": {
          "type": "boolean"
        },
        "item_required": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "props": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "type": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "TEXT",
            "DROPDOWN",
            "CHECKBOX",
            "RADIO_BUTTON",
            "DATETIME",
            "LINK",
            "NUMBER",
            "IMAGE",
            "LOCATION",
            "CRM",
            "MEMBER"
          ]
        }
      }
    },
    "dto.PostWorkRequest": {
      "type": "object",
      "required": [
        "due_date",
        "estimated_time",
        "status",
        "title"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostWorkFormItemRequest"
          }
        },
        "assignee_id": {
          "type": "string"
        },
        "can_more_than_estimated_time": {
          "type": "boolean"
        },
        "content": {
          "type": "string"
        },
        "due_date": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer",
          "enum": [
            -1,
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            240,
            480
          ]
        },
        "opacity": {
          "type": "number"
        },
        "origin_id": {
          "type": "string"
        },
        "origin_type": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PostWorkFormItemRequest"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "BEFORE_START",
            "IN_PROGRESS"
          ]
        },
        "tag_ids": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "template_id": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PostWorkspaceResponse": {
      "type": "object",
      "required": [
        "default_tag_group",
        "member",
        "workspace"
      ],
      "properties": {
        "default_tag_group": {
          "$ref": "#/definitions/model.TagGroup"
        },
        "member": {
          "$ref": "#/definitions/model.Member"
        },
        "tag_group": {
          "$ref": "#/definitions/model.TagGroup"
        },
        "workspace": {
          "$ref": "#/definitions/dto.WorkspaceResponse"
        }
      }
    },
    "dto.PutCRMFormItemRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "dto.PutCRMGroupRequest": {
      "type": "object",
      "required": [
        "crm_caption",
        "title"
      ],
      "properties": {
        "crm_caption": {
          "type": "string"
        },
        "crm_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PutFormItemRequest"
          }
        },
        "crm_icon_string": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "position": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.PutCRMGroupsPositionRequest": {
      "type": "object",
      "required": [
        "crm_group_ids"
      ],
      "properties": {
        "crm_group_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.PutDatabasePositionRequest": {
      "type": "object",
      "required": [
        "database_ids"
      ],
      "properties": {
        "database_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.PutFormItemRequest": {
      "type": "object",
      "required": [
        "id",
        "name",
        "type"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_lock_settings": {
          "type": "boolean"
        },
        "item_required": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "props": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "type": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "TEXT",
            "DROPDOWN",
            "CHECKBOX",
            "RADIO_BUTTON",
            "DATETIME",
            "LINK",
            "NUMBER",
            "IMAGE",
            "LOCATION",
            "CRM",
            "MEMBER"
          ]
        }
      }
    },
    "dto.PutMemberFormItemRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "dto.PutMemberIconSourceRequest": {
      "type": "object",
      "required": [
        "icon_source"
      ],
      "properties": {
        "icon_source": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "DEFAULT"
          ]
        }
      }
    },
    "dto.PutMemberIdleRequest": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "SUSPENDED",
            "ACTIVE"
          ]
        }
      }
    },
    "dto.PutRecordFormItemRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "dto.PutSelfMemberRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "background_text": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "member_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PutMemberFormItemRequest"
          }
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "optional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.PutFormItemRequest"
          }
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "tag_ids": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        }
      }
    },
    "dto.PutWorkspacePricingPlanRequest": {
      "type": "object",
      "properties": {
        "pricing_plan": {
          "type": "string",
          "enum": [
            "FREE",
            "PAID"
          ]
        }
      }
    },
    "dto.Reaction": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "me": {
          "type": "boolean"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Member"
          }
        }
      }
    },
    "dto.ReactionUpdateRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "is_reaction": {
          "type": "boolean"
        }
      }
    },
    "dto.Record": {
      "type": "object",
      "required": [
        "created_at",
        "database_id",
        "id",
        "name"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "chat_info": {
          "$ref": "#/definitions/dto.ChatInfo"
        },
        "created_at": {
          "type": "string"
        },
        "creator_id": {
          "type": "string"
        },
        "database_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "database_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "facilitator": {
          "$ref": "#/definitions/dto.FacilitatorResponse"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "last_update_updateable_form_items": {
          "type": "string"
        },
        "member_bookmarked_item_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "share_scope": {
          "$ref": "#/definitions/dto.ShareScopeResponse"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updateable_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.RecordsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.Record"
          }
        }
      }
    },
    "dto.Scope": {
      "type": "object",
      "properties": {
        "member_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role_tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.ShareScope": {
      "type": "object",
      "properties": {
        "member_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tag_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dto.ShareScopeMemberResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "icon_key": {
          "type": "string"
        },
        "member_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.MemberFormItem"
          }
        },
        "member_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        }
      }
    },
    "dto.ShareScopeResponse": {
      "type": "object",
      "properties": {
        "share_scope_members_response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.ShareScopeMemberResponse"
          }
        },
        "share_scope_tags_response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.ShareScopeTagResponse"
          }
        }
      }
    },
    "dto.ShareScopeTagResponse": {
      "type": "object",
      "properties": {
        "Tag_id": {
          "type": "string"
        },
        "tag_group_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "dto.SignedURLResponse": {
      "type": "object",
      "required": [
        "key",
        "signed_url"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "signed_url": {
          "type": "string"
        }
      }
    },
    "dto.StatusTaskIndicator": {
      "type": "object",
      "properties": {
        "member_before_start": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.MemberIndicator"
          }
        },
        "member_completed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.MemberIndicator"
          }
        },
        "member_in_progress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.MemberIndicator"
          }
        },
        "member_incomplete": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.MemberIndicator"
          }
        },
        "member_paused": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.MemberIndicator"
          }
        }
      }
    },
    "dto.Tag": {
      "type": "object",
      "required": [
        "created_at",
        "id",
        "tag_group_id",
        "updated_at",
        "value"
      ],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_default": {
          "type": "boolean"
        },
        "number_using": {
          "type": "integer"
        },
        "tag_group_id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "dto.TagGroup": {
      "type": "object",
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "chat_info": {
          "$ref": "#/definitions/dto.ChatInfo"
        },
        "color": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "facilitator": {
          "$ref": "#/definitions/dto.FacilitatorResponse"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "is_default": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "only_single_value_is_selected": {
          "type": "boolean"
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.Tag"
          }
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.TagGroupColor": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "is_default": {
          "type": "boolean"
        },
        "tag_group_id": {
          "type": "string"
        }
      }
    },
    "dto.TagGroupsColorResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.TagGroupColor"
          }
        }
      }
    },
    "dto.TagResponse": {
      "type": "object",
      "required": [
        "id",
        "tag_group_id",
        "value"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "tag_group_id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "dto.TaskPICDetail": {
      "type": "object",
      "properties": {
        "log_chats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Chat"
          }
        },
        "number_pic_same_status": {
          "type": "integer"
        },
        "pic_background_key": {
          "type": "string"
        },
        "pic_background_text": {
          "type": "string"
        },
        "pic_background_url": {
          "type": "string"
        },
        "pic_email": {
          "type": "string"
        },
        "pic_icon_key": {
          "type": "string"
        },
        "pic_icon_url": {
          "type": "string"
        },
        "pic_id": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_opacity": {
          "type": "number"
        },
        "pic_reverse_background": {
          "type": "boolean"
        },
        "pic_role": {
          "type": "string"
        },
        "pic_text_color": {
          "type": "string"
        },
        "task_status": {
          "type": "string"
        },
        "task_title": {
          "type": "string"
        }
      }
    },
    "dto.TaskResponse": {
      "type": "object",
      "required": [
        "created_at",
        "due_date",
        "id",
        "title",
        "updated_at"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "assign_at": {
          "type": "string"
        },
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "chat_info": {
          "$ref": "#/definitions/dto.ChatInfo"
        },
        "complete_able": {
          "type": "boolean"
        },
        "completed_at": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "created_by_o_auth_id": {
          "type": "string"
        },
        "creator_icon": {
          "type": "string"
        },
        "creator_icon_key": {
          "type": "string"
        },
        "creator_id": {
          "type": "string"
        },
        "creator_name": {
          "type": "string"
        },
        "database_id": {
          "type": "string"
        },
        "due_date": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer"
        },
        "facilitator": {
          "$ref": "#/definitions/dto.FacilitatorResponse"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "member_bookmarked_item_id": {
          "type": "string"
        },
        "message_id": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "origin_id": {
          "type": "string"
        },
        "origin_type": {
          "type": "string"
        },
        "paused_at": {
          "type": "string"
        },
        "primary_color": {
          "type": "string"
        },
        "record_id": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "resumed_at": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "root_id": {
          "type": "string"
        },
        "root_type": {
          "type": "string"
        },
        "secondary_color": {
          "type": "string"
        },
        "share_scope": {
          "$ref": "#/definitions/dto.ShareScopeResponse"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "status_task_indicator": {
          "$ref": "#/definitions/dto.StatusTaskIndicator"
        },
        "template_id": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "timing_enabled": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "total_task_time": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "dto.TaskStatusIndicator": {
      "type": "object",
      "properties": {
        "number_Complete": {
          "type": "integer"
        },
        "number_before_start": {
          "type": "integer"
        },
        "number_incomplete": {
          "type": "integer"
        },
        "number_paused": {
          "type": "integer"
        },
        "number_start": {
          "type": "integer"
        }
      }
    },
    "dto.TemplateResponse": {
      "type": "object",
      "required": [
        "created_at",
        "id",
        "title",
        "updated_at"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "chat_info": {
          "$ref": "#/definitions/dto.ChatInfo"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer"
        },
        "facilitator": {
          "$ref": "#/definitions/dto.FacilitatorResponse"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "share_scope": {
          "$ref": "#/definitions/dto.ShareScopeResponse"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "task_enabled": {
          "type": "boolean"
        },
        "task_status_indicator": {
          "$ref": "#/definitions/dto.TaskStatusIndicator"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "timing_enabled": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.UpdateEmailRequest": {
      "type": "object",
      "required": [
        "newIdToken"
      ],
      "properties": {
        "newIdToken": {
          "type": "string"
        }
      }
    },
    "dto.UpdatePICRequest": {
      "type": "object",
      "properties": {
        "is_remove": {
          "type": "boolean"
        },
        "pic_id": {
          "type": "string"
        }
      }
    },
    "dto.UpdateTagRequest": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "dto.Work": {
      "type": "object",
      "required": [
        "created_at",
        "creator_id",
        "due_date",
        "estimated_time",
        "id",
        "status",
        "tags",
        "title",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "assigned_at": {
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/model.Member"
        },
        "assignee_id": {
          "type": "string"
        },
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "can_more_than_estimated_time": {
          "description": "TODO: need to remove this field in next phase",
          "type": "boolean"
        },
        "completable": {
          "type": "boolean"
        },
        "completed_at": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "created_by_o_auth_id": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/model.Member"
        },
        "creator_id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "due_date": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer",
          "enum": [
            -1,
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            260,
            480
          ]
        },
        "form_item_data": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "last_status": {
          "description": "to aware status of work when work is incomplete",
          "type": "string"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "member_bookmarked_item_id": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "origin_id": {
          "type": "string"
        },
        "origin_type": {
          "type": "string"
        },
        "paused_at": {
          "type": "string"
        },
        "publishable": {
          "type": "boolean"
        },
        "published_at": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "resumed_at": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "sort_rank": {
          "type": "string"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "BEFORE_START",
            "IN_PROGRESS",
            "PAUSED",
            "COMPLETED",
            "INCOMPLETE"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "template_id": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        },
        "total_work_time": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "dto.WorkIndicating": {
      "type": "object",
      "properties": {
        "status_indicating": {
          "type": "string",
          "enum": [
            "DRAFT",
            "BEFORE_START",
            "IN_PROGRESS",
            "COMPLETED",
            "INCOMPLETE",
            "PAUSED"
          ]
        },
        "work_counting": {
          "type": "integer"
        }
      }
    },
    "dto.WorkspaceResponse": {
      "type": "object",
      "required": [
        "created_at",
        "id",
        "name",
        "primary_language",
        "tenant_id",
        "updated_at"
      ],
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "databases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Database"
          }
        },
        "date_change_time": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "disabled_features": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facilitator": {
          "$ref": "#/definitions/dto.FacilitatorResponse"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "icon": {
          "type": "string"
        },
        "icon_key": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number_of_actual_months": {
          "type": "integer"
        },
        "number_of_intended_months": {
          "type": "integer"
        },
        "opacity": {
          "type": "number"
        },
        "pricing_plan": {
          "type": "string",
          "enum": [
            "FREE",
            "PAID"
          ]
        },
        "primary_color": {
          "type": "string"
        },
        "primary_language": {
          "type": "string",
          "enum": [
            "vi",
            "en",
            "ja"
          ]
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "tenant_id": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "timezone": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        }
      }
    },
    "maps.AddressComponent": {
      "type": "object",
      "properties": {
        "long_name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "maps.AddressGeometry": {
      "type": "object",
      "properties": {
        "bounds": {
          "$ref": "#/definitions/maps.LatLngBounds"
        },
        "location": {
          "$ref": "#/definitions/maps.LatLng"
        },
        "location_type": {
          "type": "string"
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "viewport": {
          "$ref": "#/definitions/maps.LatLngBounds"
        }
      }
    },
    "maps.AddressPlusCode": {
      "type": "object",
      "properties": {
        "compound_code": {
          "description": "CompoundCode is a 6 character or longer local code with an explicit location (CWC8+R9, Mountain View, CA, USA).",
          "type": "string"
        },
        "global_code": {
          "description": "GlobalCode is a 4 character area code and 6 character or longer local code (849VCWC8+R9).",
          "type": "string"
        }
      }
    },
    "maps.GeocodingResult": {
      "type": "object",
      "properties": {
        "address_components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/maps.AddressComponent"
          }
        },
        "formatted_address": {
          "type": "string"
        },
        "geometry": {
          "$ref": "#/definitions/maps.AddressGeometry"
        },
        "partial_match": {
          "description": "PartialMatch indicates that the geocoder did not return an exact match for\nthe original request, though it was able to match part of the requested address.\nYou may wish to examine the original request for misspellings and/or an incomplete address.\nPartial matches most often occur for street addresses that do not exist within the\nlocality you pass in the request.\nPartial matches may also be returned when a request matches two or more locations in\nthe same locality. For example, \"21 Henr St, Bristol, UK\" will return a partial match\nfor both Henry Street and Henrietta Street.\nNote that if a request includes a misspelled address component, the geocoding service may\nsuggest an alternative address.\nSuggestions triggered in this way will also be marked as a partial match.",
          "type": "boolean"
        },
        "place_id": {
          "type": "string"
        },
        "plus_code": {
          "description": "PlusCode (see https://en.wikipedia.org/wiki/Open_Location_Code and https://plus.codes/)\nis an encoded location reference, derived from latitude and longitude coordinates,\nthat represents an area: 1/8000th of a degree by 1/8000th of a degree (about 14m x 14m at the equator)\nor smaller.\n\nPlus codes can be used as a replacement for street addresses in places where they do not exist\n(where buildings are not numbered or streets are not named).\nThe plus code is formatted as a global code and a compound code:\nTypically, both the global code and compound code are returned.\nHowever, if the result is in a remote location (for example, an ocean or desert)\nonly the global code may be returned.",
          "$ref": "#/definitions/maps.AddressPlusCode"
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "maps.LatLng": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "number"
        },
        "lng": {
          "type": "number"
        }
      }
    },
    "maps.LatLngBounds": {
      "type": "object",
      "properties": {
        "northeast": {
          "$ref": "#/definitions/maps.LatLng"
        },
        "southwest": {
          "$ref": "#/definitions/maps.LatLng"
        }
      }
    },
    "maps.PlacesSearchResult": {
      "type": "object",
      "properties": {
        "formatted_address": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/maps.LatLng"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "model.CRM": {
      "type": "object",
      "required": [
        "created_at",
        "creator_id",
        "crm_group_id",
        "id",
        "name",
        "status",
        "tags",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/model.Member"
        },
        "creator_id": {
          "type": "string"
        },
        "crm_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.CRMFormItem"
          }
        },
        "crm_group_id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "last_message_time": {
          "type": "string"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "publishable": {
          "type": "boolean"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "ARCHIVE",
            "PUBLISHED"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.CRMFormItem": {
      "type": "object",
      "required": [
        "created_at",
        "crm_id",
        "form_item_id",
        "updated_at"
      ],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "crm_id": {
          "type": "string"
        },
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "deleted_at": {
          "type": "integer"
        },
        "form_item_id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "model.CRMGroup": {
      "type": "object",
      "required": [
        "caption",
        "created_at",
        "icon_string",
        "id",
        "title",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "icon_string": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_default": {
          "type": "boolean"
        },
        "position": {
          "type": "number"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.Chat": {
      "type": "object",
      "required": [
        "actor_id",
        "created_at",
        "id",
        "message",
        "target_id",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/model.Member"
        },
        "actor_id": {
          "type": "string"
        },
        "additional_data": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "mentioned_members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.MentionedMember"
          }
        },
        "message": {
          "type": "string"
        },
        "message_type": {
          "type": "string"
        },
        "target_id": {
          "type": "string"
        },
        "target_type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.ChatRoom": {
      "type": "object",
      "required": [
        "created_at",
        "id",
        "tags",
        "title",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "id": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.Contact": {
      "type": "object",
      "required": [
        "created_at",
        "creator",
        "creator_id",
        "id",
        "tags",
        "title",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "created_by_o_auth_id": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/model.Member"
        },
        "creator_id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "expired_at": {
          "type": "string"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "id": {
          "type": "string"
        },
        "last_message_time": {
          "type": "string"
        },
        "last_published_at": {
          "type": "string"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "opacity": {
          "type": "number"
        },
        "publishable": {
          "type": "boolean"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "task_pic_users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Member"
          }
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.Database": {
      "type": "object",
      "required": [
        "icon_string",
        "id",
        "title",
        "workspace_id"
      ],
      "properties": {
        "caption": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "display_chat_on_card": {
          "type": "boolean"
        },
        "form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "icon_string": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_default": {
          "type": "boolean"
        },
        "position": {
          "type": "number"
        },
        "title": {
          "type": "string"
        },
        "updateable_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.FormItem": {
      "type": "object",
      "required": [
        "created_at",
        "display_on_card",
        "id",
        "item_required",
        "name",
        "type",
        "updated_at"
      ],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "deleted_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_lock_settings": {
          "type": "boolean"
        },
        "item_required": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "number"
        },
        "props": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "type": {
          "type": "string",
          "enum": [
            "TEXT",
            "DROPDOWN",
            "CHECKBOX",
            "RADIO_BUTTON",
            "DATETIME",
            "LINK",
            "NUMBER",
            "IMAGE",
            "LOCATION",
            "CRM",
            "MEMBER"
          ]
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "model.Log": {
      "type": "object",
      "required": [
        "action",
        "action_time",
        "actor_id",
        "created_at",
        "id",
        "target_id",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "action": {
          "type": "string"
        },
        "action_time": {
          "type": "string"
        },
        "actor": {
          "$ref": "#/definitions/model.Member"
        },
        "actor_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "log_data": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "target_id": {
          "type": "string"
        },
        "target_type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.Member": {
      "type": "object",
      "required": [
        "created_at",
        "id",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "background_text": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "icon_key": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "invited_at": {
          "type": "string"
        },
        "inviter_id": {
          "type": "string"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "member_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.MemberFormItem"
          }
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "optional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "primary_color": {
          "type": "string"
        },
        "provider_id": {
          "type": "string",
          "enum": [
            "google.com",
            "apple.com"
          ]
        },
        "reverse_background": {
          "type": "boolean"
        },
        "role": {
          "type": "string",
          "enum": [
            "MANAGER",
            "STAFF",
            "WORKER"
          ]
        },
        "secondary_color": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INVITING",
            "SUSPENDED"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.MemberBookmarkedItem": {
      "type": "object",
      "required": [
        "bookmarked_at",
        "created_at",
        "id",
        "member_id",
        "target_id",
        "updated_at"
      ],
      "properties": {
        "bookmarked_at": {
          "type": "string"
        },
        "chat_room": {
          "$ref": "#/definitions/model.ChatRoom"
        },
        "chat_room_id": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/model.Contact"
        },
        "contact_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "crm": {
          "$ref": "#/definitions/model.CRM"
        },
        "crm_id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "member_id": {
          "type": "string"
        },
        "record": {
          "$ref": "#/definitions/model.Record"
        },
        "target_id": {
          "type": "string"
        },
        "target_type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "work": {
          "$ref": "#/definitions/model.Work"
        },
        "work_id": {
          "type": "string"
        }
      }
    },
    "model.MemberFormItem": {
      "type": "object",
      "required": [
        "created_at",
        "form_item_id",
        "member_id",
        "updated_at"
      ],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "deleted_at": {
          "type": "integer"
        },
        "form_item_id": {
          "type": "string"
        },
        "member_id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "model.MentionedMember": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "icon_key": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "model.Record": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/model.Member"
        },
        "creator_id": {
          "type": "string"
        },
        "database_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "database_id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "last_message_time": {
          "type": "string"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "record_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.RecordFormItem"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updateable_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.RecordFormItem": {
      "type": "object",
      "required": [
        "created_at",
        "form_item_id",
        "record_id",
        "updated_at"
      ],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "data_obj": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "deleted_at": {
          "type": "integer"
        },
        "form_item_id": {
          "type": "string"
        },
        "record_id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "model.Tag": {
      "type": "object",
      "required": [
        "created_at",
        "id",
        "tag_group_id",
        "updated_at",
        "value"
      ],
      "properties": {
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_default": {
          "type": "boolean"
        },
        "tag_group_id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "model.TagGroup": {
      "type": "object",
      "required": [
        "color",
        "created_at",
        "id",
        "name",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "color": {
          "type": "string",
          "maxLength": 2,
          "minLength": 1
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "display_on_card": {
          "type": "boolean"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "is_default": {
          "type": "boolean"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "only_single_value_is_selected": {
          "type": "boolean"
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.Template": {
      "type": "object",
      "required": [
        "estimated_time"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "estimated_time": {
          "type": "integer",
          "enum": [
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            260,
            480
          ]
        },
        "id": {
          "type": "string"
        },
        "illustration": {
          "type": "string"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "opacity": {
          "type": "number"
        },
        "primary_color": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "reverse_background": {
          "type": "boolean"
        },
        "secondary_color": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "task_enabled": {
          "type": "boolean"
        },
        "text_alignment": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "timing_enabled": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "model.Work": {
      "type": "object",
      "required": [
        "created_at",
        "creator_id",
        "due_date",
        "estimated_time",
        "id",
        "status",
        "tags",
        "title",
        "updated_at",
        "workspace_id"
      ],
      "properties": {
        "additional_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "assigned_at": {
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/model.Member"
        },
        "assignee_id": {
          "type": "string"
        },
        "background": {
          "type": "string"
        },
        "background_key": {
          "type": "string"
        },
        "can_more_than_estimated_time": {
          "description": "TODO: need to remove this field in next phase",
          "type": "boolean"
        },
        "completable": {
          "type": "boolean"
        },
        "completed_at": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "created_by_o_auth_id": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/model.Member"
        },
        "creator_id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "integer"
        },
        "due_date": {
          "type": "string"
        },
        "estimated_time": {
          "type": "integer",
          "enum": [
            -1,
            5,
            10,
            15,
            20,
            30,
            45,
            60,
            120,
            180,
            260,
            480
          ]
        },
        "form_item_data": {
          "$ref": "#/definitions/datatypes.JSONMap"
        },
        "has_new_message": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Log"
          }
        },
        "opacity": {
          "type": "number"
        },
        "origin_id": {
          "type": "string"
        },
        "origin_type": {
          "type": "string"
        },
        "paused_at": {
          "type": "string"
        },
        "publishable": {
          "type": "boolean"
        },
        "published_at": {
          "type": "string"
        },
        "report_form_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.FormItem"
          }
        },
        "resumed_at": {
          "type": "string"
        },
        "reverse_background": {
          "type": "boolean"
        },
        "sort_rank": {
          "type": "string"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DRAFT",
            "BEFORE_START",
            "IN_PROGRESS",
            "PAUSED",
            "COMPLETED",
            "INCOMPLETE"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Tag"
          }
        },
        "template_id": {
          "type": "string"
        },
        "text_color": {
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ]
        },
        "title": {
          "type": "string"
        },
        "total_work_time": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}